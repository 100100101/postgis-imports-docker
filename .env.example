######postgis
POSTGIS_CONTAINER_SHARED_MEMORY_SIZE='4gb'
POSTGIS_COMPOSE_PROJECT_NAME=postgis_compose
POSTGIS_CONTAINER_NAME=postgis_cont
# CONTAINER_PG_INSTANCE_DIR_PATH=/var/lib/postgresql
INNER_POSTGRES_PORT=5432
# OUTER_POSTGRES_PORT=25432
POSTGRES_DB=gis
POSTGRES_USER=gisuser
POSTGRES_PASSWORD=pass
# POSTGRES_INITDB_ARGS=
# POSTGRES_INITDB_WALDIR=
# POSTGRES_HOST_AUTH_METHOD=trust
PGDATA=/var/lib/postgresql/data/pgdata
HOST_PGDATA=./pgdata
# HOST_PATH_TO_PG_CONF=./pg-configs/high-system-requirments.conf
# HOST_PATH_TO_PG_CONF=./pg-configs/postgresql.sample.conf
HOST_PATH_TO_PG_CONF=./pg-configs/tile-server-test.conf
CONT_PATH_TO_PG_CONF=/etc/postgresql/postgresql.conf
######//postgis

######osm2pgsql
OSM2PGSQL_COMPOSE_PROJECT_NAME=osm2pgsql_compose
OSM2PGSQL_CONTAINER_NAME=osm2pgsql_cont
######//osm2pgsql

######import
POSTGRES_HOST=localhost
# --cache specifies how much memory in MB to allocate for caching information. In --slim mode, this is just node positions while in non-slim mode it has to store information about ways and relations too. The rule of thumb in slim mode is as follows: use the size of the PBF file you are trying to import or about 75% of RAM, whatever is smaller. Make sure there is enough RAM left for PostgreSQL. It needs at least the amount of shared_buffers given in its configuration. You may also set --cache to 0 to disable node caching completely. This makes only sense when a flat node file is given and there is not enough RAM to fit most of the cache.
# CACHE_MB=2000
CACHE_MB=65536
CONT_OSM_FILES_DIR=/home/osm
HOST_OSM_FILES_DIR=/.../.../.../osm2pgsql/osm
OSM_PBF_FILE_NAME=Moscow.osm.pbf
# OSM_PBF_FILE_PATH=/media/user/Новый%20том/planet-220411.osm.pbf
# -E, --proj=SRID # Latlong 4326 # Web Mercator EPSG:3857
PROJECTION_SRID=4326
# PROJECTION_SRID=3857
######import-shp
# TABLE_NAME_SHP_FILENAME=boundary-polygon-lvl10
SHP_IMPORT_TABLE_NAME=railway-station-point
SHP_IMPORT_FILENAME=railway-station-point
HOST_SHAPES_PATH=./shapes
CONT_SHAPES_PATH=/home/shapes
######//import
