version: "3.9"
services:
  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    networks:
      net:
        ipv4_address: $CONTAINER_DB_HOST
    volumes:
      - $SSH_PATH:$CONTAINER_SSH_PATH
      - $PATH_TO_SHAPES:$CONTAINER_PATH_TO_SHAPES
      - $HOST_PGDATA:$PGDATA
    environment:
      - CONTAINER_PATH_TO_SHAPES=$CONTAINER_PATH_TO_SHAPES
      - CONTAINER_SSH_PATH=$CONTAINER_SSH_PATH
      - PGDATA=$PGDATA
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_DB=$POSTGRES_DB
      # - POSTGRES_INITDB_ARGS=$POSTGRES_INITDB_ARGS
      # - POSTGRES_INITDB_WALDIR=$POSTGRES_INITDB_WALDIR
      # - POSTGRES_HOST_AUTH_METHOD=$POSTGRES_HOST_AUTH_METHOD
    # ports:
    #   - $OUTER_POSTGRES_PORT:$INNER_POSTGRES_PORT
    # expose:
    #   - $OUTER_POSTGRES_PORT
    #   - $INNER_POSTGRES_PORT
    ports:
      - $INNER_POSTGRES_PORT:$INNER_POSTGRES_PORT
    expose:
      - $INNER_POSTGRES_PORT
    restart: on-failure
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    # command:
    #   - yarn serve:dev
    working_dir: /app
    networks:
      net:
        ipv4_address: $CONTAINER_APP_IP
    # links:
    #   - db
    depends_on:
      - db
    ports:
      - $APP_DEVTOOLS_PORT:$APP_DEVTOOLS_PORT
    expose:
      - $APP_DEVTOOLS_PORT
    environment:
      # - DUMPPREFIX=PG_db
      # - POSTGRES_PORT=25432
      # - POSTGRES_HOST=db
      - CONTAINER_SSH_PATH=$CONTAINER_SSH_PATH
      - APP_DEVTOOLS_PORT=$APP_DEVTOOLS_PORT
      - APP_DEVTOOLS_HOST=$APP_DEVTOOLS_HOST
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_DB=$POSTGRES_DB
      - CONTAINER_DB_HOST=$CONTAINER_DB_HOST
      #
      - CONTAINER_PATH_TO_SHAPES=$CONTAINER_PATH_TO_SHAPES
      - IS_DROP_EXISTING_TABLES=$IS_DROP_EXISTING_TABLES
      - OUTER_POSTGRES_PORT=$OUTER_POSTGRES_PORT
      - INNER_POSTGRES_PORT=$INNER_POSTGRES_PORT
      - PATH_TO_SHAPES=$PATH_TO_SHAPES
    volumes:
      - ./app:/app
      - $SSH_PATH:$CONTAINER_SSH_PATH
      - $PATH_TO_SHAPES:$CONTAINER_PATH_TO_SHAPES
    restart: on-failure
    # healthcheck:
    #   test: "exit 0"
networks:
  # react-spring: {}
  # spring-mysql: {}
  net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: $NETWORK_SUBNET
# volumes:
#   sshdata:
#   db-data: {}
# secrets:
#   db-password:
#     file: db/password.txt

